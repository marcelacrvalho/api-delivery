type Store {
    id: Int
    user: User
    active: Boolean
    deliveryTime: Double
    withdrawalTime: Double
    isOpen: Boolean
}

input StoreInput {
    id: Int
    user: User
    active: Boolean
    deliveryTime: Double
    withdrawalTime: Double
    isOpen: Boolean
}

input StoreLoginInput {
    email: String
    password: String
}

input StoreFilter {
    id: Int
    email: String
}

 type Query {
    stores: [Store]
    store(filter: StoreFilter): Store
}
 
type Mutation {
    createStore(data: StoreInput) : Store
    loginStore(data: StoreLoginInput) : Store
    updateStore(id: Int!, data: StoreInput) : Store,
    deleteStore(filter: StoreFilter!) : Boolean!
}